// Objective-C API for talking to github.com/ProtonMail/gopenpgp/v3/mime Go package.
//   gobind -lang=objc github.com/ProtonMail/gopenpgp/v3/mime
//
// File is generated by gobind. Do not edit.

#ifndef __Mime_H__
#define __Mime_H__

@import Foundation;
#include "ref.h"
#include "Universe.objc.h"

#include "Constants.objc.h"
#include "Crypto.objc.h"

@protocol MimeMIMECallbacks;
@class MimeMIMECallbacks;

@protocol MimeMIMECallbacks <NSObject>
- (void)onAttachment:(NSString* _Nullable)headers data:(NSData* _Nullable)data;
- (void)onBody:(NSString* _Nullable)body mimetype:(NSString* _Nullable)mimetype;
/**
 * Encrypted headers can be in an attachment and thus be placed at the end of the mime structure.
 */
- (void)onEncryptedHeaders:(NSString* _Nullable)headers;
- (void)onError:(NSError* _Nullable)err;
- (void)onVerified:(long)verified;
@end

/**
 * Decrypt decrypts and verifies a MIME message.
messageEncoding provides the encoding of the encrypted MIME message, either crypto.Bytes or crypto.Armor.
The decryptionHandle is used to decrypt and verify the message, while
the verifyHandle is used to verify the signature contained in the decrypted mime message.
The verifyHandle can be nil.
 */
FOUNDATION_EXPORT void MimeDecrypt(NSData* _Nullable message, int8_t messageEncoding, id<CryptoPGPDecryption> _Nullable decryptionHandle, id<CryptoPGPVerify> _Nullable verifyHandle, id<MimeMIMECallbacks> _Nullable callbacks);

@class MimeMIMECallbacks;

/**
 * MIMECallbacks defines callback methods to process a MIME message.
 */
@interface MimeMIMECallbacks : NSObject <goSeqRefInterface, MimeMIMECallbacks> {
}
@property(strong, readonly) _Nonnull id _ref;

- (nonnull instancetype)initWithRef:(_Nonnull id)ref;
- (void)onAttachment:(NSString* _Nullable)headers data:(NSData* _Nullable)data;
- (void)onBody:(NSString* _Nullable)body mimetype:(NSString* _Nullable)mimetype;
/**
 * Encrypted headers can be in an attachment and thus be placed at the end of the mime structure.
 */
- (void)onEncryptedHeaders:(NSString* _Nullable)headers;
- (void)onError:(NSError* _Nullable)err;
- (void)onVerified:(long)verified;
@end

#endif
