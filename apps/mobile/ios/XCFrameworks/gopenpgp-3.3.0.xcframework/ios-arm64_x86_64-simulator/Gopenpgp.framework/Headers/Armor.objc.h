// Objective-C API for talking to github.com/ProtonMail/gopenpgp/v3/armor Go package.
//   gobind -lang=objc github.com/ProtonMail/gopenpgp/v3/armor
//
// File is generated by gobind. Do not edit.

#ifndef __Armor_H__
#define __Armor_H__

@import Foundation;
#include "ref.h"
#include "Universe.objc.h"

#include "Constants.objc.h"

/**
 * ArmorKey armors input as a public key.
 */
FOUNDATION_EXPORT NSString* _Nonnull ArmorArmorKey(NSData* _Nullable input, NSError* _Nullable* _Nullable error);

FOUNDATION_EXPORT NSString* _Nonnull ArmorArmorPGPMessage(NSData* _Nullable signature, NSError* _Nullable* _Nullable error);

FOUNDATION_EXPORT NSData* _Nullable ArmorArmorPGPMessageBytes(NSData* _Nullable signature, NSError* _Nullable* _Nullable error);

FOUNDATION_EXPORT NSData* _Nullable ArmorArmorPGPMessageBytesChecksum(NSData* _Nullable signature, BOOL checksum, NSError* _Nullable* _Nullable error);

FOUNDATION_EXPORT NSString* _Nonnull ArmorArmorPGPMessageChecksum(NSData* _Nullable signature, BOOL checksum, NSError* _Nullable* _Nullable error);

FOUNDATION_EXPORT NSString* _Nonnull ArmorArmorPGPSignature(NSData* _Nullable signature, NSError* _Nullable* _Nullable error);

FOUNDATION_EXPORT NSData* _Nullable ArmorArmorPGPSignatureBinary(NSData* _Nullable signature, NSError* _Nullable* _Nullable error);

// skipped function ArmorReader with unsupported parameter or return types


/**
 * ArmorWithType armors input with the given armorType.
 */
FOUNDATION_EXPORT NSString* _Nonnull ArmorArmorWithType(NSData* _Nullable input, NSString* _Nullable armorType, NSError* _Nullable* _Nullable error);

/**
 * ArmorWithTypeAndCustomHeaders armors input with the given armorType and
headers.
 */
FOUNDATION_EXPORT NSString* _Nonnull ArmorArmorWithTypeAndCustomHeaders(NSData* _Nullable input, NSString* _Nullable armorType, NSString* _Nullable version, NSString* _Nullable comment, NSError* _Nullable* _Nullable error);

/**
 * ArmorWithTypeAndCustomHeadersBytes armors input with the given armorType and
headers.
 */
FOUNDATION_EXPORT NSData* _Nullable ArmorArmorWithTypeAndCustomHeadersBytes(NSData* _Nullable input, NSString* _Nullable armorType, NSString* _Nullable version, NSString* _Nullable comment, NSError* _Nullable* _Nullable error);

/**
 * ArmorWithTypeAndCustomHeadersChecksum armors input with the given armorType and
headers and checksum option.
 */
FOUNDATION_EXPORT NSString* _Nonnull ArmorArmorWithTypeAndCustomHeadersChecksum(NSData* _Nullable input, NSString* _Nullable armorType, NSString* _Nullable version, NSString* _Nullable comment, BOOL checksum, NSError* _Nullable* _Nullable error);

/**
 * ArmorWithTypeBytes armors input with the given armorType.
 */
FOUNDATION_EXPORT NSData* _Nullable ArmorArmorWithTypeBytes(NSData* _Nullable input, NSString* _Nullable armorType, NSError* _Nullable* _Nullable error);

/**
 * ArmorWithTypeBytesChecksum armors input with the given armorType and checksum option.
 */
FOUNDATION_EXPORT NSData* _Nullable ArmorArmorWithTypeBytesChecksum(NSData* _Nullable input, NSString* _Nullable armorType, BOOL checksum, NSError* _Nullable* _Nullable error);

/**
 * ArmorWithTypeChecksum armors input with the given armorType.
The checksum option determines if an armor checksum is written at the end.
 */
FOUNDATION_EXPORT NSString* _Nonnull ArmorArmorWithTypeChecksum(NSData* _Nullable input, NSString* _Nullable armorType, BOOL checksum, NSError* _Nullable* _Nullable error);

// skipped function ArmorWriterWithType with unsupported parameter or return types


// skipped function ArmorWriterWithTypeAndCustomHeaders with unsupported parameter or return types


// skipped function ArmorWriterWithTypeChecksum with unsupported parameter or return types


// skipped function IsPGPArmored with unsupported parameter or return types


/**
 * Unarmor unarmors an armored input into a byte array.
 */
FOUNDATION_EXPORT NSData* _Nullable ArmorUnarmor(NSString* _Nullable input, NSError* _Nullable* _Nullable error);

/**
 * UnarmorBytes unarmors an armored input into a byte array.
 */
FOUNDATION_EXPORT NSData* _Nullable ArmorUnarmorBytes(NSData* _Nullable input, NSError* _Nullable* _Nullable error);

#endif
